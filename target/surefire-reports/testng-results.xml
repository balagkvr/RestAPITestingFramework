<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="6" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-01T16:08:23 IST" name="Suite" finished-at="2021-08-01T16:08:27 IST" duration-ms="3892">
    <groups>
    </groups>
    <test started-at="2021-08-01T16:08:23 IST" name="Test" finished-at="2021-08-01T16:08:27 IST" duration-ms="3892">
      <class name="testcases.DeleteCustomerTest">
        <test-method signature="DeleteValidCustID(java.util.Hashtable)[pri:0, instance:testcases.DeleteCustomerTest@57abad67]" started-at="2021-08-01T16:08:26 IST" name="DeleteValidCustID" data-provider="getdata" finished-at="2021-08-01T16:08:27 IST" duration-ms="619" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=cus_JxVKItLRN9IMWK}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[invalid status code received expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: invalid status code received expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at testcases.DeleteCustomerTest.DeleteValidCustID(DeleteCustomerTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteValidCustID -->
      </class> <!-- testcases.DeleteCustomerTest -->
      <class name="testcases.CreateCustomerTest">
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:testcases.CreateCustomerTest@758705fa]" started-at="2021-08-01T16:08:22 IST" name="setUpMethod" finished-at="2021-08-01T16:08:23 IST" duration-ms="997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="CreateInvalidSecretKey(java.util.Hashtable)[pri:0, instance:testcases.CreateCustomerTest@758705fa]" started-at="2021-08-01T16:08:23 IST" name="CreateInvalidSecretKey" data-provider="getdata" finished-at="2021-08-01T16:08:26 IST" duration-ms="2624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=invalidraju, email=invalidraju@way2.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateInvalidSecretKey -->
        <test-method signature="CreateValidSecretKey(java.util.Hashtable)[pri:0, instance:testcases.CreateCustomerTest@758705fa]" started-at="2021-08-01T16:08:26 IST" name="CreateValidSecretKey" data-provider="getdata" finished-at="2021-08-01T16:08:26 IST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=raju17, email=raju17@way2.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateValidSecretKey -->
        <test-method signature="CreateValidSecretKey(java.util.Hashtable)[pri:0, instance:testcases.CreateCustomerTest@758705fa]" started-at="2021-08-01T16:08:26 IST" name="CreateValidSecretKey" data-provider="getdata" finished-at="2021-08-01T16:08:26 IST" duration-ms="529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=raju18, email=raju18@way2.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateValidSecretKey -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.CreateCustomerTest@758705fa]" started-at="2021-08-01T16:08:27 IST" name="tearDown" finished-at="2021-08-01T16:08:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.CreateCustomerTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
